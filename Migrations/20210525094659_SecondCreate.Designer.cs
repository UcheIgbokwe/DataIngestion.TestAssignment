// <auto-generated />
using Infrastructure.Persistence.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataIngestion.TestAssignment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210525094659_SecondCreate")]
    partial class SecondCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Model.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArtistId")
                        .HasColumnType("bigint");

                    b.Property<string>("ArtistTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActualArtist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViewUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Domain.Model.ArtistCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArtistId")
                        .HasColumnType("bigint");

                    b.Property<long>("CollectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ExportDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPrimaryArtist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ArtistCollections");
                });

            modelBuilder.Entity("Domain.Model.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtistDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtworkUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CollectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("CollectionTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Copyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCompilation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItunesReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelStudio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentalAdvisoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViewUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("Domain.Model.CollectionMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AmgAlbumId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<string>("ExportDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CollectionMatches");
                });
#pragma warning restore 612, 618
        }
    }
}
